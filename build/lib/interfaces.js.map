{
  "version": 3,
  "sources": ["../../src/lib/interfaces.ts"],
  "sourcesContent": ["export interface IDevice {\r\n    name: string; // e.g. \"Tablet Hallway Entry\"\r\n    id: string; // e.g. \"Tablet-Hallway-Entry\" (meets ioBroker state convention)\r\n    ip: string;\r\n    restProtocol: 'http' | 'https';\r\n    restPort: number;\r\n    restPassword: string;\r\n    lastSeen: number; // timestamp\r\n    isAlive: true | false;\r\n    mqttInfoObjectsCreated: true | false; // Set to true once first time creation initiated\r\n    mqttInfoKeys: string[]; // Info keys from MQTT info, like 'batteryLevel', 'deviceID', ...\r\n}\r\n\r\nexport interface ICmds {\r\n    readonly id: string;\r\n    readonly name: string;\r\n    readonly type: 'number' | 'boolean' | 'string';\r\n    readonly cmdOn?: string;\r\n    readonly cmdOff?: string;\r\n    readonly mqttOn?: string;\r\n    readonly mqttOff?: string;\r\n}\r\n\r\nexport interface IMqttDevice {\r\n    ip?: string;\r\n    lastTimeActive?: number;\r\n    mqttFirstReceived?: true | false;\r\n    isActive?: true | false;\r\n    timeoutNoUpdate?: ioBroker.Timeout | null;\r\n    previousInfoPublishTime?: number;\r\n}\r\n\r\nexport interface IConst {\r\n    readonly mqttEvents: string[];\r\n    readonly cmds: ICmds[];\r\n    readonly cmdsSwitches: ICmds[];\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
